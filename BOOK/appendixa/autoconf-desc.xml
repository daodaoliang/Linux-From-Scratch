<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2><title>Short descriptions</title>

<para><command>autoconf</command> is a tool for producing shell scripts
that automatically configure software source code packages to adapt to many
kinds of Unix-like systems. The configuration scripts it produces are
independent -- running them does not require the autoconf program.</para>

<para><command>autoheader</command> is a tool for creating template files
of C #define statements for configure to use.</para>

<para><command>autom4te</command> is a wrapper for the M4 macro
processor.</para>

<para><command>autoreconf</command> comes in handy when there are a lot
of autoconf-generated configure scripts around. The program runs autoconf and
autoheader repeatedly (where appropriate) to remake the autoconf configure
scripts and configuration header templates in a given directory tree.</para>

<para><command>autoscan</command> can help to create a
<filename>configure.in</filename> file for a software package. It examines
the source files in a directory tree, searching them for common portability
problems and creates a <filename>configure.scan</filename> file that serves as
as a preliminary <filename>configure.in</filename> for the package.</para>

<para><command>autoupdate</command> modifies a 
<filename>configure.in</filename> file that still calls autoconf macros
by their old names to use the current macro names.</para>

<para><command>ifnames</command> can be helpful when writing a
<filename>configure.in</filename> for a software package. It prints the
identifiers that the package uses in C preprocessor conditionals. If a package
has already been set up to have some portability, this program can help to
determine what <userinput>configure</userinput> needs to check. It can fill
in some gaps in a <filename>configure.in</filename> file generated by
autoscan.</para>

</sect2>

