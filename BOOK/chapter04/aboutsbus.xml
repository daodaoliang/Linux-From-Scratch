<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="prepare-aboutsbus">
<title>About SBUs</title>
<?dbhtml filename="aboutsbus.html"?>

<para>Most people would like to know beforehand approximately how long
it takes to compile and install each package. Because Linux From
Scratch can be built on many different systems, it is impossible to
provide accurate time estimates.  The biggest package (Glibc) will
take approximately 20 minutes on the fastest systems, but could take
up to three days on slower systems! Instead of providing actual times,
the <emphasis>Static Binutils Unit</emphasis> (SBU) measure will be
used instead.</para>

<para>The SBU measure works like this?the first package to be compiled
from this book is the statically-linked Binutils in <xref
linkend="chapter-temporary-tools"/>.  The time it takes to compile
this package is what will be referred to as the Static Binutils Unit
or SBU. All other compile times will be expressed relative to this
time.</para>

<para>For example, consider a package whose compilation time is 4.5
SBUs. This means that if a system took 10 minutes to compile and
install the static Binutils, it will take
<emphasis>approximately</emphasis> 45 minutes to build this example
package. Fortunately, most build times are much shorter than the one
for Binutils.</para>

<para>Please note that if the system compiler on the host is GCC-2 based, the
SBUs listed may be somewhat understated. This is because the SBU is
based on the very first package, compiled with the old GCC, while the
rest of the system is compiled with the newer GCC-&gcc-version; (which is
known to be approximately 30 percent slower). SBUs are also not
highly accurate for SMP-based machines.</para>

<para>To view actual timings for specific machines, we recommend
<ulink url="&lfs-root;~bdubbs/"/>.</para>

<para>In general, SBUs are inaccurate because they depend on many
factors, not just the GCC version. The only reason they are provided
is to give some kind of indication of how long it might take to
install a package, but the numbers can be off by as much as dozens of
minutes in some cases.</para>

</sect1>

