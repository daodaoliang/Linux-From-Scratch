<sect1 id="ch06-binutils">
<title>Installing Binutils-&binutils-version;</title>
<?dbhtml filename="binutils.html" dir="chapter06"?>

<screen>Estimated build time:           &binutils-time;
Estimated required disk space:  &binutils-compsize;</screen>

&aa-binutils-shortdesc;
&aa-binutils-dep;

<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2><title>Installation of Binutils</title>

<para>Now is an appropriate time to verify that your pseudo terminals (PTYs) are
working properly inside the chroot environment. We will again quickly check that
everything is set up correctly by performing a simple test:</para>

<screen><userinput>expect -c "spawn ls"</userinput></screen>

<para>If you receive the message:</para>

<blockquote><screen>The system has no more ptys.  Ask your system administrator to create more.</screen></blockquote>

<para>Your chroot environment is not set up for proper PTY operation. In this
case there is no point in running the test suites for Binutils and GCC until you
are able to resolve the issue. Please refer back to <xref linkend="ch06-proc"/>
and <xref linkend="ch06-makedev"/> and perform the recommended steps to fix the
problem.</para>

<note><para>The test suite for Binutils in this section is considered
<emphasis>critical</emphasis>. Our advice is to not skip it under any
circumstances.</para> </note>

<para>This package is known to behave badly when you have changed its
default optimization flags (including the -march and -mcpu options).
Therefore, if you have defined any environment variables that override
default optimizations, such as CFLAGS and CXXFLAGS, we recommend unsetting
or modifying them when building Binutils.</para>

<para>The Binutils documentation recommends building Binutils outside of the
source directory in a dedicated build directory:</para>

<screen><userinput>mkdir ../binutils-build
cd ../binutils-build</userinput></screen>

<para>Now prepare Binutils for compilation:</para>

<screen><userinput>../binutils-&binutils-version;/configure \
&nbsp;&nbsp;&nbsp;&nbsp;--prefix=/usr --enable-shared</userinput></screen>

<para>Compile the package:</para>

<screen><userinput>make tooldir=/usr</userinput></screen>

<para>Normally, the <emphasis>tooldir</emphasis> (the directory where the
executables end up) is set to $(exec_prefix)/$(target_alias), which expands
into, for example, <filename>/usr/i686-pc-linux-gnu</filename>. Since we only
build for our own system, we don't need this target specific directory in
<filename>/usr</filename>. That setup would be used if the system was used to
cross-compile (for example compiling a package on an Intel machine that
generates code that can be executed on PowerPC machines).</para>

<para>Test the results:</para>

<screen><userinput>make check</userinput></screen>

<para>The test suite notes from <xref linkend="ch05-binutils-pass2"/> are still
very much appropriate here. Be sure to refer back there should you have any
doubts.</para>

<para>Install the package:</para>

<screen><userinput>make tooldir=/usr install</userinput></screen>

<para>Install the <emphasis>libiberty</emphasis> header file that is needed by
some packages:</para>

<screen><userinput>cp ../binutils-&binutils-version;/include/libiberty.h /usr/include</userinput></screen>

</sect2>

</sect1>

