<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-system-perl" xreflabel="Perl" role="wrap">
<title>Perl-&perl-version;</title>
<?dbhtml filename="perl.html"?>

<indexterm zone="ch-system-perl"><primary sortas="a-Perl">Perl</primary></indexterm>

<sect2 role="package"><title/>
<para>The Perl package contains the Practical Extraction and Report Language.</para>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>2.9 SBU</seg><seg>143 MB</seg></seglistitem>
</segmentedlist>

<segmentedlist>
<segtitle>Perl installation depends on</segtitle>
<seglistitem><seg>Bash, Binutils, Coreutils, Diffutils,
Gawk, GCC, Glibc, Grep, Make, Sed</seg></seglistitem>
</segmentedlist>
</sect2>

<sect2 role="installation">
<title>Installation of Perl</title>

<para>If you want full control over the way Perl is set up, you can run the
interactive <command>Configure</command> script and hand-pick the way this
package is built. If you think you can live with the (sensible)
defaults it auto-detects, then prepare Perl for compilation with:</para>

<screen><userinput>./configure.gnu --prefix=/usr -Dpager="/bin/less -isR"</userinput></screen>

<para>The meaning of the configure option:</para>

<variablelist>
<varlistentry>
<term><userinput>-Dpager="/bin/less -isR"</userinput></term>
<listitem><para>This corrects an error in the perldoc code with the invocation 
of the less program.</para></listitem>
</varlistentry>
</variablelist>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>If you wish to run the test suite, you first have to create a basic
<filename>/etc/hosts</filename> file, which is needed by a couple of tests to
resolve the name <emphasis>localhost</emphasis>:</para>

<screen><userinput>echo "127.0.0.1 localhost $(hostname)" &gt; /etc/hosts</userinput></screen>

<para>Now run the tests, if you wish:</para>

<screen><userinput>make test</userinput></screen>

<para>Finally, install the package:</para>

<screen><userinput>make install</userinput></screen>

</sect2>


<sect2 id="contents-perl" role="content"><title>Contents of Perl</title>

<segmentedlist>
<segtitle>Installed programs</segtitle>
<segtitle>Installed libraries</segtitle>
<seglistitem><seg>a2p, c2ph, dprofpp, enc2xs,
find2perl, h2ph, h2xs, libnetcfg, perl, perl&perl-version; (link to perl),
perlbug, perlcc, perldoc, perlivp, piconv, pl2pm, pod2html, pod2latex, pod2man,
pod2text, pod2usage, podchecker, podselect, psed (link to s2p), pstruct (link
to c2ph), s2p, splain and xsubpp</seg>
<seg>(too many to name)</seg></seglistitem>
</segmentedlist>

<variablelist><title>Short descriptions</title>

<varlistentry>
<term id="a2p"><command>a2p</command></term>
<listitem>
<indexterm zone="ch-system-perl a2p"><primary sortas="b-a2p">a2p</primary></indexterm>
<para>translates awk to perl.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="c2ph"><command>c2ph</command></term>
<listitem>
<indexterm zone="ch-system-perl c2ph"><primary sortas="b-c2ph">c2ph</primary></indexterm>
<para>dumps C structures as generated from "cc -g -S" stabs.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="dprofpp"><command>dprofpp</command></term>
<listitem>
<indexterm zone="ch-system-perl dprofpp"><primary sortas="b-dprofpp">dprofpp</primary></indexterm>
<para>displays perl profile data.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="en2cxs"><command>en2cxs</command></term>
<listitem>
<indexterm zone="ch-system-perl en2cxs"><primary sortas="b-en2cxs">en2cxs</primary></indexterm>
<para>builds a Perl extension for the Encode module,
from either Unicode Character Mappings or Tcl Encoding Files.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="find2perl"><command>find2perl</command></term>
<listitem>
<indexterm zone="ch-system-perl find2perl"><primary sortas="b-find2perl">find2perl</primary></indexterm>
<para>translates find commands to perl.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="h2ph"><command>h2ph</command></term>
<listitem>
<indexterm zone="ch-system-perl h2ph"><primary sortas="b-h2ph">h2ph</primary></indexterm>
<para>converts .h C header files to .ph Perl header files.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="h2xs"><command>h2xs</command></term>
<listitem>
<indexterm zone="ch-system-perl h2xs"><primary sortas="b-h2xs">h2xs</primary></indexterm>
<para>converts .h C header files to Perl extensions.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="libnetcfg"><command>libnetcfg</command></term>
<listitem>
<indexterm zone="ch-system-perl libnetcfg"><primary sortas="b-libnetcfg">libnetcfg</primary></indexterm>
<para>can be used to configure the libnet.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="perl"><command>perl</command></term>
<listitem>
<indexterm zone="ch-system-perl perl"><primary sortas="b-perl">perl</primary></indexterm>
<para>combines some of the best features of C, sed,
awk and sh into a single swiss-army language.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="perlbug"><command>perlbug</command></term>
<listitem>
<indexterm zone="ch-system-perl perlbug"><primary sortas="b-perlbug">perlbug</primary></indexterm>
<para>is used to generate bug reports about
Perl or the modules that come with it, and mail them.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="perlcc"><command>perlcc</command></term>
<listitem>
<indexterm zone="ch-system-perl perlcc"><primary sortas="b-perlcc">perlcc</primary></indexterm>
<para>generates executables from Perl programs.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="perldoc"><command>perldoc</command></term>
<listitem>
<indexterm zone="ch-system-perl perldoc"><primary sortas="b-perldoc">perldoc</primary></indexterm>
<para>displays a piece of documentation in pod
format that is embedded in the perl installation tree or in a perl script.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="perlivp"><command>perlivp</command></term>
<listitem>
<indexterm zone="ch-system-perl perlivp"><primary sortas="b-perlivp">perlivp</primary></indexterm>
<para>is the Perl Installation Verification Procedure. It can be used to verify that 
Perl and its libraries have been installed correctly.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="piconv"><command>piconv</command></term>
<listitem>
<indexterm zone="ch-system-perl piconv"><primary sortas="b-piconv">piconv</primary></indexterm>
<para>is a Perl version of the character encoding
converter <command>iconv</command>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pl2pm"><command>pl2pm</command></term>
<listitem>
<indexterm zone="ch-system-perl pl2pm"><primary sortas="b-pl2pm">pl2pm</primary></indexterm>
<para>is a rough tool for converting Perl4 .pl files to Perl5 .pm modules.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pod2html"><command>pod2html</command></term>
<listitem>
<indexterm zone="ch-system-perl pod2html"><primary sortas="b-pod2html">pod2html</primary></indexterm>
<para>converts files from pod format to HTML format.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pod2latex"><command>pod2latex</command></term>
<listitem>
<indexterm zone="ch-system-perl pod2latex"><primary sortas="b-pod2latex">pod2latex</primary></indexterm>
<para>converts files from pod format to LaTeX format.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pod2man"><command>pod2man</command></term>
<listitem>
<indexterm zone="ch-system-perl pod2man"><primary sortas="b-pod2man">pod2man</primary></indexterm>
<para>converts pod data to formatted *roff input.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pod2text"><command>pod2text</command></term>
<listitem>
<indexterm zone="ch-system-perl pod2text"><primary sortas="b-pod2text">pod2text</primary></indexterm>
<para>converts pod data to formatted ASCII text.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pod2usage"><command>pod2usage</command></term>
<listitem>
<indexterm zone="ch-system-perl pod2usage"><primary sortas="b-pod2usage">pod2usage</primary></indexterm>
<para>prints usage messages from embedded pod docs in files.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="podchecker"><command>podchecker</command></term>
<listitem>
<indexterm zone="ch-system-perl podchecker"><primary sortas="b-podchecker">podchecker</primary></indexterm>
<para>checks the syntax of pod format documentation files.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="podselect"><command>podselect</command></term>
<listitem>
<indexterm zone="ch-system-perl podselect"><primary sortas="b-podselect">podselect</primary></indexterm>
<para>displays selected sections of pod documentation.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="psed"><command>psed</command></term>
<listitem>
<indexterm zone="ch-system-perl psed"><primary sortas="b-psed">psed</primary></indexterm>
<para>is a Perl version of the stream editor <userinput>sed</userinput>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="pstruct"><command>pstruct</command></term>
<listitem>
<indexterm zone="ch-system-perl pstruct"><primary sortas="b-pstruct">pstruct</primary></indexterm>
<para>dumps C structures as generated from "cc -g -S" stabs.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="s2p"><command>s2p</command></term>
<listitem>
<indexterm zone="ch-system-perl s2p"><primary sortas="b-s2p">s2p</primary></indexterm>
<para>translates sed to perl.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="splain"><command>splain</command></term>
<listitem>
<indexterm zone="ch-system-perl splain"><primary sortas="b-splain">splain</primary></indexterm>
<para>is used to force verbose warning
diagnostics in perl.</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="xsubpp"><command>xsubpp</command></term>
<listitem>
<indexterm zone="ch-system-perl xsubpp"><primary sortas="b-xsubpp">xsubpp</primary></indexterm>
<para>converts Perl XS code into C code.</para>
</listitem>
</varlistentry>
</variablelist>

</sect2>

</sect1>
