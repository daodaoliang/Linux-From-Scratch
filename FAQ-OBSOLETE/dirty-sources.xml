<qandaentry id="dirty-sources">
<question><para>I didn't delete the source tree after my last attempt.
Do I need to?</para></question>
<answer><para>Yes. You should always delete the source tree after installing
and delete it and start over if anything fails.
</para>
<para>The only exception is the kernel.
Most people keep their kernel source so they don't have to reconfigure
it from scratch if they need to make a small change.
If a large change is needed, like changing processor type,
it may be necessary to restart with a fresh tree even with the kernel.
</para>
<para>Here's an example when everything works:
<screen>tar xvjf foo-0.0.tar.bz2
cd foo-0.0
./configure --prefix=/usr
make
make install
<emphasis role="strong">cd ..
rm -rf foo-0.0</emphasis>
</screen>
And here's an example for if something (in this case configure) fails:
<screen>tar xvjf foo-0.0.tar.bz2
cd foo-0.0
./configure --prefix=/usr
.
.
.
*** configure: error: foo requires libess 4.2 or greater
please install libess and rerun configure.
<emphasis role="strong">cd ..
rm -rf foo-0.0</emphasis>
tar xvjf libess-4.2.tar.bz2
cd libess-4.2
./configure --prefix=/usr
make
make install
<emphasis role="strong">cd ..
rm -rf libess-4.2</emphasis>
tar xvjf foo-0.0.tar.bz2
cd foo-0.0
./configure --prefix=/usr
make
make install
<emphasis role="strong">cd ..
rm -rf foo-0.0</emphasis>
</screen></para>
<para>Ed. Note: The name of the fictional libess above follows
libiberty (from glibc, AFAIK) and libofat.
The reason comes from the gcc flag, -l, for linking a library when compiling.
For instance,
<screen>gcc -o foo foo.c -lm
</screen>
would link the "m" (math) library with the executable foo.
So, for the libraries above, the command looks like:
<screen>gcc -o foo foo.c -liberty -lowfat -less
</screen></para>
<para>Bonus points if you caught the reference to
The Hitchhiker's Guide to the Galaxy, by Douglas Adams in the example.
</para></answer>
</qandaentry>

