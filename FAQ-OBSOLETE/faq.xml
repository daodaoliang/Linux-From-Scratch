<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN">

<article class="faq"><title>The LFS FAQ</title>
	<articleinfo>
		<author>
			<firstname>Seth</firstname>
			<othername>W.</othername>
			<surname>Klein</surname>
			<affiliation>
				<address>
					<email>sk@sethwklein.net</email>
				</address>
			</affiliation>
		</author>
	</articleinfo>
<qandaset>
	<qandadiv><title>Introduction</title>
		<qandaentry><question><para>Why this FAQ?</para></question>
			<answer><para>I started this FAQ in an attempt to make the traffic on
				the LFS mailing lists more manageable and improve the signal
				to noise ratio. I'm going to limit myself to things that come
				up often there leaving tips and such for
				<ulink url="http://hints.linuxfromscratch.org">LFS-Hints</ulink>.
			</para></answer>
		</qandaentry>
		<qandaentry><question><para>What is appropriate for lfs-support?</para></question>
			<answer><para>From the
				<ulink url="http://www.linuxfromscratch.org/mailinglists/info.shtml">website</ulink>:
			</para>
			<blockquote>
				<para>The lfs-support mailing list provides support to users
					building an LFS system as far as the end of the main book.
					Requests for help with installing software beyond the base
					system should go to the blfs-support list.
				</para>
			</blockquote>
			<para>For instance, GCC and Glibc are part of the LFS book and
				belong on lfs-support.
				XFree86, KDE, and GNOME are not part of the LFS book and
				belong on blfs-support.
			</para></answer>
		</qandaentry>
		<qandaentry><question><para>Contributing to this FAQ.</para></question>
			<answer><para>If you have an addition or suggestion, please, let me know.
				I can be reached at
				<ulink url="mailto:sk@sethwklein.net">sk@sethwklein.net</ulink>,
				and i read the lists thoroughly (but not always promptly).
			</para></answer>
			<answer><para>I want to stick to questions that have been asked at least
				twice and to remove items that are no longer an issue.
			</para></answer>
		</qandaentry>
		<qandaentry><question><para>Where is the best place to get help?</para></question>
			<answer><para>When this FAQ fails to help, there are several places to go.
			</para></answer>
			<answer><para>If you're having a problem with something in the book,
				it never hurts to go back over the book.
				It's surprising how easy it is to overlook little things.
			</para></answer>
			<answer><para>If nothing else,
				reading the appropriate man and info pages
				will yield useful information on some subject,
				if not what you were looking for,
				and insure that you know enough not to embarrass yourself
				if you have to ask someone.
			</para></answer>
			<answer><para><ulink url="http://www.linuxdoc.org/">http://www.linuxdoc.org/</ulink>
				has the HOW-TOs and a great deal of other documentation.
				You might find something there.
			</para></answer>
			<answer><para>The linuxfromscratch.org site search includes the mailing lists.
				Many questions have been discussed there at least once.  It's at
				<ulink url="http://search.linuxfromscratch.org/">http://search.linuxfromscratch.org/</ulink>.
			</para></answer>
			<answer><para>For support type help, IRC is often best. It's faster,
				and doesn't clog the mailinglists.
				Information on the LFS IRC channel is at
				<ulink url="http://www.linuxfromscratch.org/misc/irc.shtml">http://www.linuxfromscratch.org/misc/irc.shtml</ulink>.
			</para></answer>
			<answer><para>As a last resort, there are the mailing lists.
				People will get frustrated with you if you use the wrong one or cross post.
				Mailing list information is at
				<ulink url="http://www.linuxfromscratch.org/mailinglists/info.shtml">http://www.linuxfromscratch.org/mailinglists/info.shtml</ulink>:
				and tells which list to use.
			</para></answer>
		</qandaentry>
		<qandaentry><question><para>What is LFS?</para></question>
			<answer><para>LFS stands for Linux From Scratch which is a project that
				primarily documents how to install a Linux system by downloading,
				building, and installing the packages yourself.
			</para>
			<para>For why you might want to do this, how to do it, and other
				useful stuff, see the website at
				<ulink url="http://www.linuxfromscratch.org/">http://www.linuxfromscratch.org/</ulink>.
			</para></answer>
		</qandaentry>
	</qandadiv>


<qandadiv id="frb"><title>Frequently Reported Bugs</title>

<qandaentry id="deps_version_not_match_package">
<question><para>The Dependencies section for Foo 2.0 says "Foo 1.0".
</para></question>
<answer><para>That is correct. Dependencies sections are only updated
occasionally due to the amount of manual labor required.
</para></answer>
</qandaentry>

<qandaentry id="delete_key_not_work">
<question><para>The Delete key doesn't work.
</para></question>
<answer><para>See: <ulink url="http://beyond.linuxfromscratch.org/view/cvs/chapter03/inputrc.html">http://beyond.linuxfromscratch.org/view/cvs/chapter03/inputrc.html</ulink>.
</para></answer>
</qandaentry>

</qandadiv>

<qandadiv id="fre"><title>Frequently Requested Enhancements</title>

<para>LFS is a very basic system,
in massive contrast to traditional distributions. The reason is this:
LFS is not intended to create your system as you want it.
It's intended to be just enough to allow you
to build your system as you want it.
It's not an end, it's a beginning.
When you're done with LFS, you've just started building your system.
</para>
<para>This can be a problem if you're new to Unix systems
and want a typical install with X and a web browser
but have no idea what packages you need.
For this reason, there is the Beyond Linux From Scratch, or BLFS, project.
It is at <ulink
url="http://beyond.linuxfromscratch.org/">http://beyond.linuxfromscratch.org/</ulink>.
</para>

<qandaentry id="gcc-3_0">
<question><para>Why isn't GCC 3.0.x in the book?
</para></question>
<answer><para>Because stable glibc (2.2.4) refuses to be compiled by it.
</para>
<para>If you want to try gcc 3, get glibc 2.2.5pre1.
Be warned, however, that gcc 3 is a major upgrade and many packages,
especially older ones, may not compile without modifications.
</para></answer>
</qandaentry>

<qandaentry id="add-gawk">
<question><para>Why not use gawk instead of mawk?</para></question>
<answer><para>The book is switching to gawk after 3.2 is released.
</para>
<para>If you wish to switch before then,
gawk is a well behaved GNU package
so it is available from your favorite GNU mirror
and "./configure --prefix=/usr && make && make install" works.
</para></answer>
</qandaentry>

<qandaentry id="add-grub"><question><para>Why not use GRUB instead of LILO?</para></question>
<answer><para>GRUB has not yet been released as stable.
When it is, it will be considered and, if it seems better than LILO, used.
</para>
<para>If your current setup uses GRUB, there's no need to switch.
In addition to the GRUB documentation, see the LFS "GRUB-Howto" Hint at <ulink
url="http://hints.linuxfromscratch.org/hints/grub-howto.txt">http://hints.linuxfromscratch.org/hints/grub-howto.txt</ulink>
</para></answer>
</qandaentry>

<qandaentry id="why-ed"><question><para>Why is ed in the book?</para></question>
<answer><para>The book includes ed because patch uses it to process ed scripts.
However, these are rare today; everyone uses diff format patches.
</para><para>But ed does have other uses:
<itemizedlist>
<listitem><para>For all who've learned to use it,
ed is a very useful emergency editor.
The MS Windows standard telnet client can deal with ed
but has trouble with fullscreen editors (like vim).
And a full featured vim requires not only ncurses, but X11 as well!
Any trouble with those libraries will leave
the system without an editor if ed isn't present.
</para></listitem>
<listitem><para>Though it's not a reason to have ed in the book,
some people actually like ed.
</para></listitem>
<listitem><para>Understanding ed helps with understanding vi(m) and Unix
history in general.
</para></listitem>
</itemizedlist>
</para></answer>
</qandaentry>

</qandadiv>

<qandadiv id="fee"><title>Frequently Encountered Errors</title>

<qandadiv id="fee-compile"><title>Compile Time Errors</title>

<qandadiv id="fee-compile-any"><title>Errors From Any Package</title>

<qandaentry id="bad-interpreter-permission-denied">
<question>
<para>./configure: bad interpreter: Permission denied</para>
</question>
<answer><para>You're most likely getting this while building bash in Chapter 5
of the LFS Book.
The problem is most likely your mount options.
You probably have a line in /etc/fstab like:
<screen>/dev/hda10	/mnt/lfs	ext2	user	1  2
</screen>
'user' is the mount flag, and it's the problem. To quote from the mount man page:
<blockquote><screen> 
user  Allow  an  ordinary  user to mount the file system.
      This  option  implies  the options noexec,  nosuid,
      and nodev (unless overridden by subsequent options,
      as in the option line user,exec,dev,suid).
</screen></blockquote>
So change the line in /etc/fstab like this:
<screen>/dev/hda10	/mnt/lfs	ext2	defaults	1  2
</screen>
</para></answer>
</qandaentry>

<qandaentry id="env-bash-no-such-file">
<question><para>/usr/bin/env: /bin/bash: No such file or directory</para></question>
<answer><para>You're trying to follow the LFS Book
and working on entering chroot, right?
Most likely $LFS/bin/bash isn't statically linked.
Check it with:
<screen>file $LFS/bin/bash
</screen>
If that doesn't say something about "statically linked",
reinstall bash following the instructions in Chapter 5.
</para></answer>
</qandaentry>

<qandaentry id="config-not-gnu-c">
<question><para>checking whether we are using GNU C... no
</para></question>
<answer><para>If you're getting an error from configure like:
<screen>checking whether we are using GNU C... no
configure: error: GNU libc must be compiled using GNU CC
</screen>
It may be because egrep (from the grep package) isn't working.
</para>
<para>To test if egrep is working <emphasis>before</emphasis> reinstalling
the grep package in Chapter 6,
run the following command from <emphasis>outside</emphasis> chroot:
<screen>file $LFS/usr/bin/egrep
</screen>
If it doesn't say "statically linked" you have a problem
and need to reinstall the grep package.
</para>
<para>To test if egrep is working <emphasis>after</emphasis> reinstalling
the grep package in Chapter 6,
run the following command from <emphasis>inside</emphasis> chroot:
<screen>egrep root /etc/passwd
</screen>
If it doesn't print root's line from /etc/passwd,
again, you have a problem.
(This test also works if you encounter the problem after rebooting
into the new LFS system.)
</para></answer>
</qandaentry>

</qandadiv>

<qandadiv id="fee-compile-specific"><title>Errors From Specific Packages</title>

<qandaentry id="optimized-glibc-fail">
<question><para>My optimized build of glibc is failing in spinlock.c</para></question>
<answer><para>It should be mentioned that glibc (and gcc and binutils)
are good places to not optimize.
The performance versus stability trade off is unusually poor
for these packages. But. . . .
</para></answer>
<answer><para>If you've specified a CFLAGS value like "-march=i686 -mcpu=686"
and you're getting an error like this:
<screen>spinlock.c: In function `__pthread_lock':
spinlock.c:107: inconsistent operand constraints in an `asm'
make[2]: *** [/usr/src/glibc-build/linuxthreads/spinlock.o] Error 1
make[2]: Leaving directory `/usr/src/glibc-2.2.4/linuxthreads'
make[1]: *** [linuxthreads/others] Error 2
make[1]: Leaving directory `/usr/src/glibc-2.2.4'
make: *** [all] Error 2
</screen>
It's because, unlike almost everything else,
spinlock.c requires optimization.
You could set CFLAGS to something like
"-march=i686 -mcpu=i686 -O2".
(Note the "-O2".)
</para>
<para>But it is better to set optimizations in glibc-x.x.x/Makeconfig.
This is the relevant section of Makeconfig:
<screen># Default flags to pass the C compiler.
ifndef default_cflags
ifeq ($(release),stable)
default_cflags := <emphasis role="strong">-g -O2</emphasis>
else
default_cflags := -g -O
endif
endif
</screen>
And here is an example to adapt:
<screen># Default flags to pass the C compiler.
ifndef default_cflags
ifeq ($(release),stable)
default_cflags := <emphasis role="strong">-g0 -Os -march=i386 -mcpu=i386 -pipe</emphasis>
else
default_cflags := -g -O
endif
endif
</screen>
</para></answer>
</qandaentry>

</qandadiv>

</qandadiv>

</qandadiv>

	<qandadiv id="resources"><title>Resources</title>

<qandaentry id="how-to-find"><question><para>How do I find package Foo?</para></question>	
<answer><para>Mostly, it's not hard, but some packages can lead quite a chase.
Here are some steps:
<orderedlist>

<listitem><para><ulink
url="http://freshmeat.net/">http://freshmeat.net/</ulink>:
Searching for <screen>foo</screen> will usually turn up a freshmeat page
with links to an URL
where you can check for newer releases not reported to freshmeat.
</para></listitem>

<listitem><para><ulink
url="http://www.google.com/">http://www.google.com/</ulink>:
Use a search string like
<screen>+foo +index</screen>
which tends to find "Index of /pub/foo" type pages, or even
<screen>+foo +index -RPM -debian</screen>
to eliminate links to RPM packages and Debian's archives.
</para></listitem>

<listitem><para>Google may well turn up a link to something under <ulink
url="http://www.ibiblio.org/pub/">http://www.ibiblio.org/pub/</ulink>.
(If you want to look specifically on ibiblio.org use
<screen>foo site:ibiblio.org</screen>)
Beware that ibiblio.org may not have the most recent version.
However, they often will have...
</para></listitem>

<listitem><para>A foo.lsm (Linux Software Map) file
which may list a primary site where more recent versions may be found.
</para></listitem>

</orderedlist>
</para></answer>
</qandaentry>

<qandaentry id="bootcd">
<question><para>How do I make a bootable CD?</para></question>
<answer><para>See the Boot-CD Hint and <ulink
url="http://hints.linuxfromscratch.org/hints/bootcd.txt">http://hints.linuxfromscratch.org/hints/bootcd.txt</ulink>
</para></answer>
</qandaentry>

<qandaentry id="install-log">
<question><para>How do I find what files a package installs?</para></question>
<answer><para>Use install-log from <ulink
url="http://install-log.sourceforge.net/">http://install-log.sourceforge.net/</ulink>.
</para></answer>
</qandaentry>

<qandaentry id="portmap">
<question><para>Where's portmap?</para></question>
<answer><para>There are instructions in the NFS Hint at <ulink
url="http://hints.linuxfromscratch.org/hints/nfs.txt">http://hints.linuxfromscratch.org/hints/nfs.txt</ulink>.
</para></answer>
<answer><para>Also, Marc Heerdink writes:
<blockquote><para>I have a version of tcp_wrappers and portmap up that have both
been patched with the debian patches, adapted Makefiles for LFS plus all
compile warnings/problems were fixed. Additionally, an lfs-install.sh is
included in both tarballs that provides a really quick and dirty way to
install them. They can be found at <ulink
url="http://www.linuxfromscratch.org/~gimli/">http://www.linuxfromscratch.org/~gimli/</ulink>.
You may want to add a note about these packages for people who want to do
it the easy way :)
</para></blockquote>
</para></answer>
</qandaentry>

		<qandaentry id="what-dist"><question><para>What distribution should I use to start from?</para></question>
			<answer><para>Any recent distribution should be fine. If you have problems,
				try installing and/or updating the development packages.
				(Look for ones starting in "gcc" or "glibc" "libstdc++" or
				ending in "-dev".)
			</para></answer>
		</qandaentry>
		<qandaentry id="really-small"><question><para>How do I make that really small install the book mentions?</para></question>
			<answer><para>Gerard describes the process of making a 5MB LFS install
				in an email archived at <ulink
				url="http://archive.linuxfromscratch.org/mail-archives/lfs-support/2001/10/0072.html">http://archive.linuxfromscratch.org/mail-archives/lfs-support/2001/10/0072.html</ulink>
			</para></answer>
		</qandaentry>

<qandaentry id="where-ncurses-mandrake">
<question><para>Where's libncurses.a in Mandrake?</para></question>
<answer><para>In Mandrake/RPMS2/libncurses5-devel-5.2-16mdk.1586.rpm on Disk 2.
Version numbers might be a little different for you.
(If you're missing libcurses.a (no "n"),
reread the book's instructions for bash more carefully.)
</para></answer>
</qandaentry>

	</qandadiv>

<qandadiv id="fsc"><title>Frequently Sought Cluebits</title>

<qandaentry id="dos-text">
<question><para>What's a DOS format text file?</para></question>
<answer><para>It has to do with the characters used to end lines.
</para>
<para>There are two that may be used:
<itemizedlist>
	<listitem><para>Line Feed: (LF) Octal:012 Decimal:10 Hex:0A C Style Escape:'\n'
		Moves down one line.
	</para></listitem>
	<listitem><para>Carriage Return: (CR) Octal:015 Decimal:13 Hex:0D C Style Excape:'\r'
		Move to the left margin.
	</para></listitem>
</itemizedlist>
</para>
<para>Unix, DOS, and MacOS each use a different combination to end lines in text files:
<itemizedlist>
	<listitem><para>Unix: LF only.
		This is why when a Unix format text file is sent to a printer raw,
		it prints out
		<screen>like
    stairs
          steps.
</screen>
	</para></listitem>
	<listitem><para>DOS: CRLF both.
		Which is why if you do "cat -v" on a DOS file you'll see a "^M"
		(control m is carriage return) at the end of each line. And that
		is why scripts don't work when written with Microsoft Notepad.
		The kernel looks for "/bin/sh^M" which doesn't exist. There's a
		"/bin/sh", but nothing with a "^M" appended.
	</para></listitem>
	<listitem><para>MacOs: CR only.
		Printers probably print every line atop the first, and Unix tools
		think the whole file is one line with "^M" all through it.
	</para></listitem>
</itemizedlist>
</para>
<para>To change DOS to Unix, use
<screen>cp &lt;filename> &lt;filename>.dos && cat &lt;filename>.dos | tr -d '\r' > &lt;filename>
</screen>
Other conversions will probably require sed or a different use of tr
and are left as an exercise for the reader.
</para></answer>
</qandaentry>

</qandadiv>


	<qandadiv id="compiling"><title>Compiling</title>
<!--		<qandadiv id="before-ask-comp"><title>Before you ask on the list...</title>-->
			<qandaentry id="optimizations"><question><para>If you are using optimizations:</para></question>
				<answer><para>If you're getting errors and you're using optimizations,
					try without optimizations. Even if the errors can't possibly
					be related. I've see reports of configure scripts not
					running because of optimization settings. Weird, huh?
				</para>
				<para>Also, optimization settings that work for someone else
					may not work for you. Settings that used to work may break
					if you make the smallest, most innocent hardware change.
				</para>
				<para>(If you don't know what optimization settings are,
					don't worry, you don't need to.)
				</para></answer>
			</qandaentry>
			<qandaentry id="version-not-in-book"><question><para>If you are using a version not in the book:</para></question>
				<answer><para>If you're getting errors and you're using a version of
					a package that differs from the version in the book
					(either newer or older), try the version in the book.
					Sometimes there are reasons why the book uses a particular
					version. Search the list archives if you're curious.
				</para></answer>
			</qandaentry>
			<qandaentry id="dirty-sources"><question><para>If you didn't delete the source tree after your last attempt:</para></question>
				<answer><para>If you're getting errors and you tried compiling before
					but didn't "rm -rf" the sources between,
					delete and try again.
					Basically, extract, configure, and make;
					and if that fails delete the whole business
					before starting over from "extract".
				</para></answer>
			</qandaentry>
<!--		</qandadiv>-->
		<qandaentry id="sig11"><question><para>I'm getting fatal errors about signal 11.</para></question>
			<answer><para>See <ulink url="http://www.bitwizard.nl/sig11/">http://www.bitwizard.nl/sig11/</ulink>.
			</para></answer>
		</qandaentry>
		<qandaentry id="cross-compile"><question><para>How do I cross compile LFS?</para></question>
			<answer><para>It's often useful to compile LFS for one machine
				on another machine. Say using that 1Ghz Athlon
				to build an install for an old 486.
				While this is technically not cross compiling,
				binaries compiled for the Athlon cannot be run on the 486
				because binaries compiled for the newer processor
				use features the older processor doesn't have.
				To make the newer system compile for the older,
				follow the hint at <ulink
				url="http://hints.linuxfromscratch.org/hints/crosscompiling-x86.txt">http://hints.linuxfromscratch.org/hints/crosscompiling-x86.txt</ulink>
			</para></answer>
		</qandaentry>
		<qandaentry id="gcc-warnings"><question><para>Are compiler warnings from GCC bad?</para></question>
			<answer><para>Short answer: no.
			</para></answer>
			<answer><para>Long answer: probably, but only to someone
				working on the package you're trying to compile. Mostly,
				everything will be fine unless make quits with an error.
			</para>
			<para>Here's an example:
			</para>
			<screen>sk ~/tmp $ cat > Makefile
main:
	gcc main.c
sk ~/tmp $ cat > main.c
void main() { exit(0); }
sk ~/tmp $ make
gcc main.c
<emphasis role="strong">main.c: In function `main':
main.c:1: warning: return type of `main' is not `int'</emphasis>
sk ~/tmp $ ######## that worked ########
sk ~/tmp $ 
sk ~/tmp $ cat > main.c
int main() { e<emphasis role="strong">xx</emphasis>it(0) }
sk ~/tmp $ make
gcc main.c
<emphasis role="strong">main.c: In function `main':
main.c:1: parse error before `}'
make: *** [main] Error 1</emphasis>
sk ~/tmp $ ######## that failed ########
sk ~/tmp $
			</screen></answer>
		</qandaentry>
		<qandaentry id="perm-denied"><question><para>I'm getting `/dev/null: Permission denied'</para></question>
			<answer><para>Does /dev/null look like this:
				<screen>$ ls -l /dev/null
crw-rw-rw-   1 root     root       1,   3 Aug  3  2000 /dev/null
				</screen>
				If not, it should. See the chmod(1) and chown(1) man pages
				if you need help fixing it.
				</para>
				<para>If it does look right,
				the problem is probably your mount options.
				See the answer to "<link
				linkend="bad-interpreter-permission-denied">./configure: bad
				interpreter: Permission denied</link>", above.
			</para></answer>
		</qandaentry>
		<qandaentry id="conf-guess-fail"><question><para>configure can't guess my host type.</para></question>
			<answer><para>Typical symptoms look like this:
			</para>
			<screen>sk ~/tmp-0.0 $ ./configure 
creating cache ./config.cache
checking host system type... <emphasis role="strong">configure: error: can not guess host type; you must specify one</emphasis>
sk ~/tmp-0.0 $
			</screen>
			<para>The problem is usually that the script can't run the compiler.
				Usually it's just a missing /usr/bin/cc symlink. You can fix it like
				this:
			</para>
			<screen>cd /usr/bin
ln -s gcc cc
			</screen>
			<para>If that doesn't do it, check the file config.log created by configure.
				Errors go here and may indicate the problem.
			</para></answer>
		</qandaentry>
		<qandaentry id="missing-x-includes"><question><para>A package can't find Xlib.h.</para></question>
			<answer><para>Typical symptoms look like this:
			</para>
			<screen>sk ~/tmp $ cat > Makefile
x11:
        gcc x11.c
sk ~/tmp $ cat > x11.c
#include &lt;X11/Xlib.h>
int main() { exit(0); }
sk ~/tmp $ make
gcc x11.c
<emphasis role="strong">x11.c:1: X11/Xlib.h: No such file or directory
make: *** [x11] Error 1</emphasis>
sk ~/tmp $ 
			</screen>
			<para>Creating a couple symlinks will fix this. Here are the commands:
			</para>
			<screen>cd /usr
ln -s X11R6 X11
cd include
ln -s ../X11/include/X11 X11
			</screen></answer>
		</qandaentry>
		<qandaentry id="stdgnu89"><question><para>I'm having trouble compiling something with GCC 3.x</para></question>
			<answer><para>You should be aware that you're on the bleeding edge.
				As of 3.0, the LFS Book recommends GCC 2.95.3.
				However, there are some things you can do:
			</para></answer>
			<answer><para>Try adding the -std=gnu89 switch to the compile options.
				(For instance, in CFLAGS or CC.
				The exact method is a bit beyond the scope of this FAQ.)
			</para></answer>
		</qandaentry>
	</qandadiv>
	<qandadiv id="specific-packages"><title>Questions about specific packages.</title>
		<qandaentry id="how-to-create-user"><question><para>How do I create a non-root user?</para></question>
			<answer><para>Use the useradd program. It was installed with the shadow package.
			</para></answer>
		</qandaentry>
		<qandaentry id="sh-utils-getloadavg"><question><para>My static sh-utils build is failing with "undefined reference to `getloadavg'".</para></question>
			<answer><para>If you're trying to build static sh-utils and you're getting an error like this:
				<screen>gcc  -g -O2  -static -o uptime  uptime.o ../lib/libsu.a -lutil
uptime.o: In function `print_uptime':
/lfs/tmp/sh-utils-2.0/src/uptime.c:125: undefined reference to `getloadavg'
collect2: ld returned 1 exit status
make[2]: *** [uptime] Error 1
make[2]: Leaving directory `/lfs/tmp/sh-utils-2.0/src'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/lfs/tmp/sh-utils-2.0'
make: *** [all-recursive-am] Error 2
				</screen>
				I am unable to reproduce this error and so cannot present
				a tested solution, but two solutions have been posted by others.
				I suggest trying them in the following order:
				<itemizedlist>
					<listitem><para><ulink url="http://archive.linuxfromscratch.org/mail-archives/blfs-support/2001/06/0507.html">http://archive.linuxfromscratch.org/mail-archives/blfs-support/2001/06/0507.html</ulink>:
					This attempts to correct the incorrectly generated config.h
					and should be the correct solution if you can get it to work
					by following the description given in the post.
					</para></listitem>
					<listitem><para>If that doesn't work, delete the sources,
					re-extract, and try this:
					<ulink url="http://archive.linuxfromscratch.org/mail-archives/blfs-support/2001/06/0495.html">http://archive.linuxfromscratch.org/mail-archives/blfs-support/2001/06/0495.html</ulink>
					This attempts to avoid compiling uptime at all
					since it won't be needed in chroot
					and compiling uptime dynamically in chroot
					doesn't have this problem.
					</para></listitem>
				</itemizedlist>
			</para></answer>
		</qandaentry>

		<qandaentry id="f-hostname"><question><para>My hostname is getting set to "-f"!</para></question>
			<answer><para>You need to install the net-tools package. (See the instructions in
				the LFS book.)
			</para>
			<para>The hostname command your system is using is from sh-utils and doesn't
				support the -f option. When it is called with the -f option it assumes
				the hostname should be set to "-f". The hostname command from net-tools
				doesn't have this problem.
			</para></answer>
		</qandaentry>
		<qandaentry id="kernel-modules"><question><para>How do I setup kernel modules?</para></question>
			<answer><para>Follow the Module-HOWTO at <ulink
				url="http://www.linuxdoc.org/HOWTO/Module-HOWTO/">http://www.linuxdoc.org/HOWTO/Module-HOWTO/</ulink>.
			</para></answer>
		</qandaentry>
<!--
		<qandaentry id="fileutils-error"><question><para>I'm getting errors when compiling fileutils.</para></question>
			<answer><para>You may need to upgrade to the latest version or apply the fileutils patch.
				Both are available from <ulink
				url="http://download.linuxfromscratch.org/conglomeration/">http://download.linuxfromscratch.org/conglomeration/</ulink>.
			</para></answer>
		</qandaentry>
-->
<!-- 2001-09-29
		<qandaentry id="glibc-crypt"><question><para>Where is glibc-crypt-2.2.x?</para></question>
			<answer><para>As of glibc-2.2, you no longer need to get glibc-crypt separately.
				It has been merged into the main package because the US
				has relaxed it's export regulations.
			</para></answer>
		</qandaentry>
-->
		<qandaentry id="lilo-errors"><question><para>What do those LILO errors mean?</para></question>
			<answer><para>The documentation in the LILO distribution lists all errors
				(such as when it prints "LI" and stops),
				but a quick overview is available at <ulink
				url="http://sdb.suse.de/sdb/en/html/kgw_lilo_errmsg.html">http://sdb.suse.de/sdb/en/html/kgw_lilo_errmsg.html</ulink>.
			</para></answer>
		</qandaentry>
		<qandaentry id="net-pf-x"><question><para>I'm getting errors about net-pf-?.</para></question>
			<answer><para>When you compiled net-tools you enabled support for a protocol
				family (that's where the "pf" comes from) that you didn't
				enable support for in the kernel. (You probably just accepted
				the default answers.)
 			</para>
			<para>A full list is in /usr/include/linux/socket.h but here is
				a list of the likely culprits:
				<itemizedlist>
					<listitem><para>net-pf-3: Amateur Radio AX.25 (AF_AX25)
					</para></listitem>
					<listitem><para>net-pf-4: Novell IPX (AF_IPX)
					</para></listitem>
					<listitem><para>net-pf-5: AppleTalk DDP (AF_APPLETALK)
					</para></listitem>
					<listitem><para>net-pf-6: Amateur Radio NET/ROM (AF_NETROM)
					</para></listitem>
					<listitem><para>net-pf-9: Reserved for X.25 project (AF_X25)
					</para></listitem>
				</itemizedlist>
			</para>
			<para>Naturally the fix is to recompile net-tools without support
				for the things you don't need. (Or recompile your kernel with
				support if you find you actually wanted them.) The workaround
				to put a line like the following in /etc/modules.conf
			</para>
			<screen>alias net-pf-? off
			</screen>
			<para>Replace the question mark with the correct number, of course.
				And rerun depmod.
			</para></answer>
			<answer><para>If you get an error about net-pf-7, you probably need to
				enable support for the loopback network device (not block
				device) in your kernel. Or you may need to add the following
				line to /etc/modules.conf and rerun depmod.
			</para>
			<screen>alias net-pf-7 loop
			</screen></answer>
		</qandaentry>
		<qandaentry id="char-major-10-135"><question><para>I'm getting errors about char-major-10-135.</para></question>
			<answer><para>Errors about char-major-10-135 refer to the character device,
				major 10, minor 135, which is /dev/rtc.
				It provides access to the BIOS clock, or RTC, the Real Time Clock.
				Check /usr/src/linux/Documentation/rtc.txt for more information.
			</para>
			<para>Something, most likely hwclock, is trying to use it
				but you haven't configured kernel support for it in your kernel.
				Either delete /dev/rtc so hwclock won't try to use it
				or enable RTC support in your kernel.
				It's located in make menuconfig under
				"Character devices" -&gt; "Enhanced Real Time Clock Support".
			</para></answer>
		</qandaentry>
	</qandadiv>
	<qandadiv id="additions"><title>Additions / Changes to LFS.</title>
		<qandaentry id="new-version"><question><para>There's a new version of package Foo.</para></question>
			<answer><para>There's no need to mention it unless you have something
				useful to add such as changes in the compile instructions.
				If it isn't already in CVS, it's on the todo list or
				we've chosen not to use it for some reason. A search of
				the list archives may reveal the reason.
			</para></answer>
		</qandaentry>

<qandaentry id="kernel-header-copy"><question><para>Why copy the kernel headers instead of linking them?</para></question>
<answer><para>In short, we copy the kernel headers
instead of linking them because
the kernel headers should match the currently running libc,
not the currently running kernel.
</para></answer>
<answer><para>For the long answer see these:
<itemizedlist>
<listitem><para>A post by Linus himself: <ulink
url="http://www.uwsg.iu.edu/hypermail/linux/kernel/0007.3/0587.html">http://www.uwsg.iu.edu/hypermail/linux/kernel/0007.3/0587.html</ulink>
</para></listitem>
<listitem><para>Kernel Traffic #80, 4. Symlinks In The Kernel; Kernel/Library/etc Interface Dispute: <ulink
url="http://kt.zork.net/kernel-traffic/kt20000814_80.txt">http://kt.zork.net/kernel-traffic/kt20000814_80.txt</ulink>
(This covers the thread in which Linus' post occurred.)
</para></listitem>
</itemizedlist>
</para></answer>
</qandaentry>

<!--		<qandadiv id="setup-polishing"><title>Polishing your setup.</title>-->
<!--
			<para>These don't really belong in the FAQ,
				but they come up often on the lists.
			</para>
-->

<qandaentry id="less-prints-ad">
<question><para>Why does less (and therefore man) print &lt;AD&gt; instead of
hyphens?</para></question>
<answer><para>Because the LANG and LC_ALL environment variables aren't set.
To fix that, set them in the ~/.bashrc file for each user or in /etc/profile
by adding lines like this:
<screen>export LANG=en_US
export LC_ALL=en_US
</screen>
</para>
<para>Those lines can be added to /etc/profile with the following command:
<screen>echo -e 'export LANG=en_US\nexport LC_ALL=en_US' >> /etc/profile
</screen>
</para>
<para>You'll have to change the "en_US" part if you don't use US English.
</para></answer>
</qandaentry>

			<qandaentry id="which"><question><para>Where's which?</para></question>
				<answer><para>It's not in there! A proper which is available
					from the GNU Project at
					<ulink url="ftp://ftp.gnu.org/gnu/which/">ftp://ftp.gnu.org/gnu/which/</ulink>
					or at
					<ulink url="http://www.xs4all.nl/~carlo17/which/">http://www.xs4all.nl/~carlo17/which/</ulink>.
					Or for systems that don't require a good user environment
					the simplest thing is probably to create a shell script
					using these commands:
				</para>
				<screen>cat > /usr/bin/which << "EOF"
#!/bin/bash

type -p "$@"

EOF
chmod 755 /usr/bin/which
chown root.root /usr/bin/which
				</screen></answer>
			</qandaentry>
<!--		</qandadiv>-->
	</qandadiv>
</qandaset>
</article>

