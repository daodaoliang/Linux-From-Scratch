<sect1 id="ch02-install">
<title>How to install the software</title>

<para>
Before you can actually start doing something with a package, you need
to unpack it first. Often you will find the package files being tar'ed and
gzip'ed. (You can determine this by looking at the extension of the file.
tar'ed and gzip'ed archives have a .tar.gz or .tgz extension, for
example.) I'm not going to write down every time how to ungzip and how 
to untar an archive. I will tell you how to do that once, in this section. 
There is also the possibility  that you have the ability of downloading 
a .tar.bz2 file. Such a file is tar'ed and compressed with the bzip2 program. 
Bzip2 achieves a better compression than the commonly used gzip does. In 
order to use bz2 archives you need to have the bzip2 program installed. 
Most if not every distribution comes with this program so chances are 
high it is already installed on your system. If not, install it using 
your distribution's installation tool.
</para>

<para>
To start with, change to the $LFS/usr/src directory by running:
</para>

<blockquote><literallayout>

        <userinput>cd $LFS/usr/src</userinput>

</literallayout></blockquote>

<para>
When you have a file that is tar'ed and gzip'ed, you unpack it by
running either one of the following two commands, depending on the
filename format:
</para>

<blockquote><literallayout>

        <userinput>tar xvzf filename.tar.gz</userinput>
        <userinput>tar xvzf filename.tgz</userinput>

</literallayout></blockquote>


<para>
When you have a file that is tar'ed and bzip2'ed, you unpack it by
running:
</para>

<blockquote><literallayout>

        <userinput>bzcat filename.tar.bz2 | tar xv</userinput>

</literallayout></blockquote>

<para>
Some tar programs (most of them nowadays but not all of them) are
slightly modified to be able to use bzip2 files directly using either
the I or the y tar parameter which works the same as the z tar parameter
to handle gzip archives.
</para>

<para>
When you have a file that is tar'ed, you unpack it by running:
</para>

<blockquote><literallayout>

        <userinput>tar xvf filename.tar</userinput>

</literallayout></blockquote>

<para>
When the archive is unpacked a new directory will be created under the
current directory (and this document assumes that you unpack the archives
under the $LFS/usr/src directory). You have to enter that new directory
before you continue with the installation instructions. So every time the
book is going to install a program, it's up to you to unpack the source
archive.
</para>

<para>
When you have a file that is gzip'ed, you unpack it by running:
</para>

<blockquote><literallayout>

	<userinput>gunzip filename.gz</userinput>

</literallayout></blockquote>

<para>
After you have installed a package you can do two things with it. You can
either delete the directory that contains the sources or you can keep it.
If you decide to keep it, that's fine with me. But, if you need the same package
again in a later chapter, you need to delete the directory first before using
it again. If you don't do this, you might end up in trouble because old
settings will be used (settings that apply to your normal Linux system but
which don't always apply to your LFS system). Doing a simple make clean
or make distclean does not always guarantee a totally clean source tree. 
The configure script can also have files lying around in various 
subdirectories which aren't always removed by a make clean process.
</para>

<para>
There is one exception to that rule: don't remove the linux kernel source
tree. A lot of programs need the kernel headers, so that's the only
directory you don't want to remove, unless you are not going to
compile any software anymore.
</para>

</sect1>

