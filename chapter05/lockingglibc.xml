<sect1 id="ch05-locking-glibc">
<title>"Locking in" Glibc</title>
<?dbhtml filename="lockingglibc.html" dir="chapter05"?>

<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2>
<title>Installation of the linker scripts</title>

<para><screen><userinput>make -C ld install-data-local</userinput></screen></para>

<para>This installs the adjusted linker scripts. Remember they were adjusted
a little while back, at the end of the first pass of Binutils? The linker
scripts now contain no mention of <filename>/lib</filename>,
<filename>/usr/lib</filename> or <filename>/usr/local/lib</filename>.
From this point onwards everything will link <emphasis>only</emphasis>
against the libraries in <filename>/stage1/lib</filename>.</para>

<para>You can now remove the binutils-* directories.</para>

</sect2>

<sect2>
<title>Amending GCC's specs file</title>

<para>The final thing to do is to amend our GCC specs file so that it points
to the new dynamic linker. A simple sed will accomplish this:</para>
   
<para><screen><userinput>SPECFILE=/stage1/lib/gcc-lib/*/*/specs
sed -e 's@/lib/ld.so.1@/stage1/lib/ld.so.1@g' \
&nbsp;&nbsp;&nbsp;&nbsp;-e 's@/lib/ld-linux.so.2@/stage1/lib/ld-linux.so.2@g' \
&nbsp;&nbsp;&nbsp;&nbsp;$SPECFILE > XX
mv XX $SPECFILE
unset SPECFILE</userinput></screen></para>

<para>We recommend that you cut-and-paste the above rather than try and type
it all in. Or you can edit the specs file by hand if you want to: just replace
"/lib/ld-linux.so.2" with "/stage1/lib/ld-linux.so.2".</para>

<para>This completes the installation of the self-contained toolchain, which
can now be used to build the rest of the temporary tools.</para>

</sect2>

</sect1>

