<sect1 id="ch06-gcc">
<title>Installing GCC-&gcc-version;</title>
<?dbhtml filename="gcc.html" dir="chapter06"?>

<screen>Estimated build time:           &gcc-time;
Estimated required disk space:  &gcc-compsize;</screen>

&aa-gcc-shortdesc;
&aa-gcc-dep;

<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2>
<title>Installation of GCC</title>

<note><para>The test suite for GCC in this section is considered
<emphasis>critical</emphasis>. Our advice is to not skip it under any
circumstance.</para></note>

<para>This package is known to behave badly when you have changed its
default optimization flags (including the -march and -mcpu options).
Therefore, if you have defined any environment variables that override
default optimizations, such as CFLAGS and CXXFLAGS, we recommend unsetting
or modifying them when building GCC.</para>

<para>This time we will build both the C and the C++ compiler, so you'll have
to unpack the GCC-core <emphasis>and</emphasis> the GCC-g++ tarball -- they
will unfold into the same directory. You should likewise extract the
GCC-testsuite package. The full GCC package contains even more
compilers. Instructions for building these can be found at
<ulink url="&blfs-root;view/stable/general/gcc.html"/>.</para>

<screen><userinput>patch -Np1 -i ../&gcc-nofixincludes-patch;
patch -Np1 -i ../&gcc-suppress-libiberty-patch;</userinput></screen>

<para>The second patch here suppresses the installation of libiberty from GCC,
as we will use the one provided by binutils instead. Be careful
<emphasis>not</emphasis> to apply the GCC specs patch from Chapter 5
here.</para>

<para>The GCC documentation recommends building GCC outside of the source
directory in a dedicated build directory:</para>

<screen><userinput>mkdir ../gcc-build
cd ../gcc-build</userinput></screen>

<para>Now prepare GCC for compilation:</para>

<screen><userinput>../gcc-&gcc-version;/configure --prefix=/usr \
&nbsp;&nbsp;&nbsp;&nbsp;--enable-shared --enable-threads=posix \
&nbsp;&nbsp;&nbsp;&nbsp;--enable-__cxa_atexit --enable-clocale=gnu \
&nbsp;&nbsp;&nbsp;&nbsp;--enable-languages=c,c++</userinput></screen>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>Test the results, but don't stop at errors (you'll remember the few
known ones):</para>

<screen><userinput>make -k check</userinput></screen>

<para>The test suite notes from <xref linkend="ch05-gcc-pass2"/> are still very
much appropriate here. Be sure to refer back there should you have any
doubts.</para>

<para>And install the package:</para>

<screen><userinput>make install</userinput></screen>

<para>Some packages expect the C PreProcessor to be installed in the
<filename>/lib</filename> directory.
To honor those packages, create this symlink:</para>

<screen><userinput>ln -s ../usr/bin/cpp /lib</userinput></screen>

<para>Many packages use the name <userinput>cc</userinput> to call the C
compiler. To satisfy those packages, create a symlink:</para>

<screen><userinput>ln -s gcc /usr/bin/cc</userinput></screen>

<note><para>At this point it is strongly recommended to repeat the sanity check
we performed earlier in this chapter. Refer back to
<xref linkend="ch06-adjustingtoolchain"/> and repeat the check. If the results
are wrong, then most likely you erroneously applied the GCC Specs patch from
Chapter 5.</para></note>

</sect2>

</sect1>

