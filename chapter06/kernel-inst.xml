<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2>
<title>Installation of the kernel headers</title>

<para>We won't be compiling a new kernel yet -- we'll do that when we have
finished the installation of all the packages. But as some packages need the
kernel header files, we're going to unpack the kernel archive now, set it up
and copy the header files so they can be found by these packages.</para>

<para>It is important to note that the files in the kernel source directory
are not owned by root. Whenever you unpack a package as user root (like we
do here inside chroot), the files end up having the user and group ID's of
whatever they were on the packager's computer. This is usually not a
problem for any other package you install because you remove the source
tree after the installation. But the Linux kernel source tree is often kept
around for a long time, so there's a chance that whatever userid was used will
be assigned to somebody on your machine and that person would have write
access to the kernel source.</para>

<para>In light of this, you might want to run <userinput>chown -R 0:0</userinput>
on the <filename>linux-&kernel-version;</filename> directory
to ensure all files are owned by user <emphasis>root</emphasis>.</para>

<para>Kernel header installation requires the <emphasis>pwd</emphasis> program.
In the kernel source, the path to the pwd program is hard-wired as /bin/pwd.
Create a symlink to account for that:</para>

<para><screen><userinput>ln -s /static/bin/pwd /bin/pwd</userinput></screen></para>

<para>Prepare for header installation:</para>

<para><screen><userinput>make mrproper</userinput></screen></para>

<para>This ensures that the kernel tree is absolutely clean. The kernel team
recommends that this command be issued prior to <emphasis>each</emphasis> kernel
compilation. You shouldn't rely on the source tree being clean after
untarring.</para>

<para>Create the <filename>include/linux/version.h</filename> file:</para>

<para><screen><userinput>make include/linux/version.h</userinput></screen></para>

<para>Create the platform-specific <filename>include/asm</filename>
symlink:</para>

<para><screen><userinput>make symlinks</userinput></screen></para>

<para>Install the platform specific-header files:</para>

<para><screen><userinput>cp -HR include/asm /usr/include &amp;&amp;
cp -R include/asm-generic /usr/include</userinput></screen></para>

<para>Install the cross-platform kernel header files:</para>

<para><screen><userinput>cp -R include/linux /usr/include</userinput></screen></para>

<para>There are a few kernel header files which make use of the
<filename>autoconf.h</filename> header file. Since we do not yet configure the
kernel, we need to create this file ourselves in order to avoid compilation
failures. Create an empty autoconf.h file:</para>

<para><screen><userinput>touch /usr/include/linux/autoconf.h</userinput></screen></para>

<para>Since the <filename>/bin/pwd</filename> symlink we created earlier
was only temporary, it can now be removed:</para>

<para><screen><userinput>rm /bin/pwd</userinput></screen></para>

</sect2>

