<sect1 id="ch08-grub">
<title>Making the LFS system bootable</title>
<?dbhtml filename="grub.html" dir="chapter08"?>

<para>Your shiny new LFS system is almost complete. One of the last things to
do is ensure you can boot it. The instructions below apply only to computers
of IA-32 architecture, i.e. mainstream PC's. Information on "boot loading" for
other architectures should be available in the usual resource specific
locations for those architectures.</para>

<para>Boot loading can be a complex area. First, a few cautionary words. You
really should be familiar with your current boot loader and any other
operating systems present on your hard drive(s) that you might wish to keep
bootable. Please make sure that you have an emergency boot disk ready, so that
you can rescue your computer if, by any chance, your computer becomes unusable
(unbootable).</para>

<para>Earlier, we compiled and installed the Grub boot loader software in
preparation for this step. The procedure involves writing some special Grub
files to specific locations on the hard drive. Before we get to that, we
highly recommend that you create a Grub boot floppy diskette just in case.
Insert a blank floppy diskette and run the following commands:</para>

<screen><userinput>dd if=/boot/grub/stage1 of=/dev/fd0 bs=512 count=1
dd if=/boot/grub/stage2 of=/dev/fd0 bs=512 seek=1</userinput></screen>

<para>Remove the diskette and store it somewhere safe. Now we'll run the
<userinput>grub</userinput> shell:</para>

<screen><userinput>grub</userinput></screen>

<para>Grub uses its own naming structure for drives and partitions, in the form
of (hdn,m), where <emphasis>n</emphasis> is the hard drive number, and
<emphasis>m</emphasis> the partition number, both starting from zero. This
means, for instance, that partition <filename>hda1</filename> is (hd0,0) to
Grub, and <filename>hdb2</filename> is (hd1,1). In contrast to Linux, Grub
doesn't consider CD-ROM drives to be hard drives, so if you have a CD on
<filename>hdb</filename>, for example, and a second hard drive on
<filename>hdc</filename>, that second hard drive would still be (hd1).</para>

<para>Using the above information, determine the appropriate designator for
your root partition. For the following example, we'll assume your root
partition is <filename>hda4</filename>.</para>

<para>First, tell Grub where to search for its <filename>stage{1,2}</filename>
files -- you can use Tab everywhere to make Grub show the alternatives:</para>

<screen><userinput>root (hd0,3)</userinput></screen>

<!-- HACK - Force some whitespace to appease tidy -->
<literallayout></literallayout>

<warning><para>The following command will overwrite your current boot loader.
Don't run the command if this is not what you want. For example, you may be
using a third party boot manager to manage your MBR (Master Boot Record). In
this scenario, it would probably make more sense to install Grub into the
"boot sector" of the LFS partition, in which case the command would become:
<userinput>setup (hd0,3)</userinput>.</para></warning>

<!-- HACK - Force some whitespace to appease tidy -->
<literallayout></literallayout>

<para>Then tell it to install itself into the MBR (Master Boot Record) of
<filename>hda</filename>:</para>

<screen><userinput>setup (hd0)</userinput></screen>

<para>If all is well, Grub will have reported finding its files in
<filename>/boot/grub</filename>. That's all there is to it:</para>

<screen><userinput>quit</userinput></screen>

<para>Now we need to create a "menu list" file, defining Grub's boot
menu:</para>

<screen><userinput>cat &gt; /boot/grub/menu.lst &lt;&lt; "EOF"</userinput>
# Begin /boot/grub/menu.lst

# By default boot the first menu entry.
default 0

# Allow 30 seconds before booting the default.
timeout 30

# Use prettier colors.
color green/black light-green/black

# The first entry is for LFS.
title LFS &milestone;
root (hd0,3)
kernel /boot/lfskernel root=/dev/hda4 ro
<userinput>EOF</userinput></screen>

<para>You may want to add an entry for your host distribution.  It might look
like this:</para>

<screen><userinput>cat &gt;&gt; /boot/grub/menu.lst &lt;&lt; "EOF"</userinput>
title Red Hat
root (hd0,2)
kernel /boot/kernel-2.4.20 root=/dev/hda3 ro
initrd /boot/initrd-2.4.20
<userinput>EOF</userinput></screen>

<para>Also, if you happen to dual-boot Windows, the following entry should
allow booting it:</para>

<screen><userinput>cat &gt;&gt; /boot/grub/menu.lst &lt;&lt; "EOF"</userinput>
title Windows
rootnoverify (hd0,0)
chainloader +1
<userinput>EOF</userinput></screen>

<para>If <userinput>info grub</userinput> doesn't tell you all you want to
know, you can find more information regarding Grub on its website, located at:
<ulink url="http://www.gnu.org/software/grub"/>.</para>

</sect1>

