Things to do:

- Rewrite log-install to use strace instead of find. I've been using strace
to create the installation dependencies in the book, so why not use it to
create installation log files. It's pretty much identical anyways (instead
of looking for mainly 'execve' in strace's output, now look for mainly
'write' output). I'm too far into creating the current scripts to change
to strace. I want to get these log files wrapped up (at the time of writing
this I'm almost done logging chapter 6's installation) and upload this
package for testing.

Perhaps the strace rewrite can take place even before LFS-4.0 is released.
Afterall, strace is not needed to check an installation, only to create the
log files to check an installation afterwards. In other words: if you
install software not covered by the LFS Book.

- Implement -q option for silent running (for use in scripts for example to
  check an install without having to see output)

From lfs-dev discussion:

On Fri, Mar 15, 2002 at 11:30:26PM +0000, Mark Hymers wrote:
> /checklfs-0.1/install-logs/gcc-2.95.3:
> /usr/lib/gcc-lib/i686-pc-linux-gnu/2.95.3
> /usr/lib/gcc-lib/i686-pc-linux-gnu/2.95.3/cc1
> /usr/lib/gcc-lib/i686-pc-linux-gnu/2.95.3/crtbeginS.o
> /usr/lib/gcc-lib/i686-pc-linux-gnu/2.95.3/cpp0
> 
> etc..
> 
> Is there anything clever we could do to avoid this putting out an error
> on different systems or should we just add a note to the book when it's
> added to CVS?

How about this for "cleaverness":

add a little sed thing to the log-install script to replace
i686-pc-linux-gnu with *

that way checklfs will check for

/usr/lib/gcc-lib/*/2.95.3/fooblahbar

Hm, that means it'll only work when an i686'er runs log-install. What if
it's sparc or something, sedding for i*(86) wouldn't do either.

We could just hardcode those paths and change them. We know there's an
architecture dir in /usr/lib/gcc-lib always, so perhaps this:

sed s%/usr/lib/gcc-lib/*%/usr/lib/gcc-lib/\*%'

that should make the shell expand the first * into the real dir. name, then
replace with a literal * (\* will stop bash from expanding it).
-----------------

