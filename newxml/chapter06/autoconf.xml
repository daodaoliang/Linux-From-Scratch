<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3CR3//EN" "http://www.docbook.org/xml/4.3CR3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 xmlns:xi="http://www.w3.org/2003/XInclude" id="ch-system-autoconf" xreflabel="Autoconf">
<title>Installing Autoconf-&autoconf-version;</title>
<?dbhtml filename="autoconf.html"?>

<para>The Autoconf package contains programs for producing shell scripts that
can automatically configure source code.</para>

<screen>&buildtime; 0.5 SBU
&diskspace; 7.7 MB</screen>

<literallayout>Official download location for Autoconf (&autoconf-version;): 
<ulink url="ftp://ftp.gnu.org/gnu/autoconf/"/></literallayout>

<para>For its installation Autoconf depends on: Bash, Coreutils, Diffutils, Grep,
M4, Make, Perl, Sed.</para>


<sect2>
<title>Installation of Autoconf</title>

<para>Prepare Autoconf for compilation:</para>

<screen><userinput>./configure --prefix=/usr</userinput></screen>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>To have the results tested, issue:
<userinput>make check</userinput>. This takes a long time, about 2 SBUs.</para>

<para>And install the package:</para>

<screen><userinput>make install</userinput></screen>

</sect2>


<sect2 id="contents-autoconf"><title>Contents of Autoconf</title>

<para><emphasis>Installed programs</emphasis>: autoconf, autoheader, autom4te,
autoreconf, autoscan, autoupdate and ifnames</para>

</sect2>

<sect2><title>Short descriptions</title>

<para><command>autoconf</command> is a tool for producing shell scripts
that automatically configure software source code packages to adapt to many
kinds of Unix-like systems. The configuration scripts it produces are
independent -- running them does not require the autoconf program.</para>

<para><command>autoheader</command> is a tool for creating template files
of C #define statements for configure to use.</para>

<para><command>autom4te</command> is a wrapper for the M4 macro
processor.</para>

<para><command>autoreconf</command> comes in handy when there are a lot
of autoconf-generated configure scripts around. The program runs autoconf and
autoheader repeatedly (where appropriate) to remake the autoconf configure
scripts and configuration header templates in a given directory tree.</para>

<para><command>autoscan</command> can help to create a
<filename>configure.in</filename> file for a software package. It examines
the source files in a directory tree, searching them for common portability
problems and creates a <filename>configure.scan</filename> file that serves as
as a preliminary <filename>configure.in</filename> for the package.</para>

<para><command>autoupdate</command> modifies a 
<filename>configure.in</filename> file that still calls autoconf macros
by their old names to use the current macro names.</para>

<para><command>ifnames</command> can be helpful when writing a
<filename>configure.in</filename> for a software package. It prints the
identifiers that the package uses in C preprocessor conditionals. If a package
has already been set up to have some portability, this program can help to
determine what <command>configure</command> needs to check. It can fill
in some gaps in a <filename>configure.in</filename> file generated by
autoscan.</para>

</sect2>



</sect1>
