<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3CR2//EN" "http://www.docbook.org/xml/4.3CR2/docbookx.dtd" [
  <!ENTITY % gcc-entities SYSTEM "../ent/gcc.ent">
  %gcc-entities;
]>
<sect1 id="ch06-gcc">
<title>Installing GCC-&gcc-version;</title>
<?dbhtml filename="gcc.html"?>

<screen>Estimated build time:           11.7 SBU
Estimated required disk space:  294 MB</screen>

<xi:include xmlns:xi="http://www.w3.org/2003/XInclude" href="../appendixa/gcc-contents.xml"/>



<xi:include xmlns:xi="http://www.w3.org/2003/XInclude" href="../appendixa/gcc-deps.xml"/>



<sect2>
<title>Installation of GCC</title>

<note><para>The test suite for GCC in this section is considered
<emphasis>critical</emphasis>. Our advice is to not skip it under any
circumstance.</para></note>

<para>This package is known to behave badly when you have changed its
default optimization flags (including the -march and -mcpu options).
Therefore, if you have defined any environment variables that override
default optimizations, such as CFLAGS and CXXFLAGS, we recommend unsetting
or modifying them when building GCC.</para>

<para>Unpack the GCC-core <emphasis>and</emphasis> the GCC-g++ tarball -- they
will unfold into the same directory. You should likewise extract the
GCC-testsuite package. The full GCC package contains even more
compilers. Instructions for building these can be found at
<ulink url="http://www.linuxfromscratch.org/blfs/view/stable/general/gcc.html"/>.</para>

<note><para>Be careful <emphasis role="strong">not</emphasis> to apply the GCC
Specs patch from Chapter 5 here.</para></note>

<para>First apply the No-Fixincludes patch that we also used in the previous
chapter:</para>

<screen><userinput>patch -Np1 -i ../gcc-&gcc-version;-no_fixincludes-1.patch</userinput></screen>

<para>Now apply a sed substitution that will suppress the installation of
<filename>libiberty.a</filename>. We want to use the version of
<filename>libiberty.a</filename> provided by Binutils:</para>

<screen><userinput>sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in</userinput></screen>

<para>The GCC documentation recommends building GCC outside of the source
directory in a dedicated build directory:</para>

<screen><userinput>mkdir ../gcc-build
cd ../gcc-build</userinput></screen>

<para>Now prepare GCC for compilation:</para>

<screen><userinput>../gcc-&gcc-version;/configure --prefix=/usr \
    --enable-shared --enable-threads=posix \
    --enable-__cxa_atexit --enable-clocale=gnu \
    --enable-languages=c,c++</userinput></screen>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>Test the results, but don't stop at errors (you'll remember the few
known ones):</para>

<screen><userinput>make -k check</userinput></screen>

<para>The test suite notes from <xref linkend="ch05-gcc-pass2"/> are still very
much appropriate here. Be sure to refer back there should you have any
doubts.</para>

<para>And install the package:</para>

<screen><userinput>make install</userinput></screen>

<para>Some packages expect the C PreProcessor to be installed in the
<filename>/lib</filename> directory.
To honor those packages, create this symlink:</para>

<screen><userinput>ln -s ../usr/bin/cpp /lib</userinput></screen>

<para>Many packages use the name <userinput>cc</userinput> to call the C
compiler. To satisfy those packages, create a symlink:</para>

<screen><userinput>ln -s gcc /usr/bin/cc</userinput></screen>

<note><para>At this point it is strongly recommended to repeat the sanity check
we performed earlier in this chapter. Refer back to
<xref linkend="ch06-adjustingtoolchain"/> and repeat the check. If the results
are wrong, then most likely you erroneously applied the GCC Specs patch from
Chapter 5.</para></note>

</sect2>

</sect1>
