<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3CR2//EN" "http://www.docbook.org/xml/4.3CR2/docbookx.dtd">
<sect1 id="ch06-glibc">
<title>Installing Glibc-2.3.2</title>
<?dbhtml filename="glibc.html"?>

<screen>Estimated build time:           12.3 SBU
Estimated required disk space:  784 MB</screen>

<xi:include xmlns:xi="http://www.w3.org/2003/XInclude" href="../appendixa/glibc-contents.xml"/>



<xi:include xmlns:xi="http://www.w3.org/2003/XInclude" href="../appendixa/glibc-deps.xml"/>



<sect2>
<title>Glibc installation</title>

<para>The Glibc build system is very well self-contained and will install
perfectly, even though our compiler specs file and linker are still pointing
at <filename>/tools</filename>. We cannot adjust the specs and linker before
the Glibc install, because the Glibc autoconf tests would then give bogus
results and thus defeat our goal of achieving a clean build.</para>

<note><para>The test suite for Glibc in this section is considered
<emphasis>critical</emphasis>. Our advice is to not skip it under any
circumstance.</para></note>

<para>Before starting to build Glibc, remember to unpack the Glibc-linuxthreads
again inside the <filename>glibc-2.3.2</filename> directory, and to
unset any environment variables that override the default optimization
flags.</para>

<para>Apply the same patch we used previously:</para>
                                                                                
<screen><userinput>patch -Np1 -i ../glibc-2.3.2-sscanf-1.patch</userinput></screen>

<para>The Glibc documentation recommends building Glibc outside of the source
directory in a dedicated build directory:</para>

<screen><userinput>mkdir ../glibc-build
cd ../glibc-build</userinput></screen>

<para>Now prepare Glibc for compilation:</para>

<screen><userinput>../glibc-2.3.2/configure --prefix=/usr \
    --disable-profile --enable-add-ons \
    --libexecdir=/usr/lib --with-headers=/usr/include</userinput></screen>

<para>The meaning of the new configure options:</para>

<itemizedlist>
<listitem><para><userinput>--with-headers=/usr/include</userinput>: This
ensures that the kernel headers in <filename>/usr/include</filename> are used
for this build. If you don't pass this switch then the headers from
<filename>/tools/include</filename> are used which of course is not ideal
(although they should be identical). Using this switch has the advantage
that you will be informed immediately should you have forgotten to install the
kernel headers into <filename>/usr/include</filename>.</para></listitem>
</itemizedlist>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>Test the results:</para>

<screen><userinput>make check</userinput></screen>

<para>The test suite notes from <xref linkend="ch05-glibc"/> are still very much
appropriate here. Be sure to refer back there should you have any doubts.</para>

<para>Though it is a harmless message, the install stage of Glibc will
complain about the absence of <filename>/etc/ld.so.conf</filename>. Fix this
annoying little warning with:</para>

<screen><userinput>touch /etc/ld.so.conf</userinput></screen>

<para>And install the package:</para>

<screen><userinput>make install</userinput></screen>

<para>The locales that can make your system respond in a different language
weren't installed by the above command. Do it with this:</para>

<screen><userinput>make localedata/install-locales</userinput></screen>

<para>An alternative to running the previous command is to install only those
locales which you need or want. This can be achieved using the
<userinput>localedef</userinput> command. Information on this can be found in
the <filename>INSTALL</filename> file in the
<filename>glibc-2.3.2</filename> tree. However,  there are a number
of locales that are essential for the tests of future packages to pass
correctly. The following instructions, in place of the install-locales
command above, will install the minimum set of locales necessary for the
tests to run successfully:</para>

<screen><userinput>mkdir -p /usr/lib/locale
localedef -i de_DE -f ISO-8859-1 de_DE
localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro
localedef -i en_HK -f ISO-8859-1 en_HK
localedef -i en_PH -f ISO-8859-1 en_PH
localedef -i en_US -f ISO-8859-1 en_US
localedef -i es_MX -f ISO-8859-1 es_MX
localedef -i fr_FR -f ISO-8859-1 fr_FR
localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro
localedef -i it_IT -f ISO-8859-1 it_IT
localedef -i ja_JP -f EUC-JP ja_JP</userinput></screen>

<para>Finally, build the linuxthreads man pages:</para>

<screen><userinput>make -C ../glibc-2.3.2/linuxthreads/man</userinput></screen>

<para>And install these pages:</para>

<screen><userinput>make -C ../glibc-2.3.2/linuxthreads/man install</userinput></screen>

</sect2>

<sect2><title>Configuring Glibc</title>

<para>We need to create the <filename>/etc/nsswitch.conf</filename> file,
because, although Glibc provides defaults when this file is missing or corrupt,
the Glibc defaults don't work well with networking. Also, our time zone needs
to be set up.</para>

<para>Create a new file <filename>/etc/nsswitch.conf</filename> by running the
following:</para>

<screen><userinput>cat &gt; /etc/nsswitch.conf &lt;&lt; "EOF"</userinput>
# Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

publickey: files

hosts: files dns
networks: files

protocols: db files
services: db files
ethers: db files
rpc: db files

netgroup: db files

# End /etc/nsswitch.conf
<userinput>EOF</userinput></screen>

<para>To find out what time zone you're in, run the following script:</para>

<screen><userinput>tzselect</userinput></screen>

<para>When you've answered a few questions about your location, the script will
output the name of your time zone, something like <emphasis>EST5EDT</emphasis>
or <emphasis>Canada/Eastern</emphasis>. Then create the
<filename>/etc/localtime</filename> file by running:</para>

<screen><userinput>cp --remove-destination /usr/share/zoneinfo/Canada/Eastern /etc/localtime</userinput></screen>

<para>The meaning of the option:</para>

<itemizedlist>
<listitem><para><userinput>--remove-destination</userinput>: This is needed to
force removal of the already existing symbolic link. The reason why we copy
instead of symlink is to cover the situation where <filename>/usr</filename> is
on a separate partition. This could matter, for example, when booted into single
user mode.</para></listitem>
</itemizedlist>

<para>Of course, instead of <emphasis>Canada/Eastern</emphasis>, fill in
the name of the time zone that the <userinput>tzselect</userinput> script
gave you.</para>

</sect2>


<sect2>
<title>Configuring Dynamic Loader</title>

<para>By default, the dynamic loader
(<filename>/lib/ld-linux.so.2</filename>) searches through <filename class="directory">/lib</filename> and <filename class="directory">/usr/lib</filename> for dynamic libraries that are needed
by programs when you run them. However, if there are libraries in
directories other than <filename class="directory">/lib</filename> and
<filename class="directory">/usr/lib</filename>, you need to add them to
the <filename>/etc/ld.so.conf</filename> file for the dynamic
loader to find them. Two directories that are commonly known to contain
additional libraries are <filename class="directory">/usr/local/lib</filename> and <filename class="directory">/opt/lib</filename>, so we add those directories to the
dynamic loader's search path.</para>

<para>Create a new file <filename>/etc/ld.so.conf</filename> by running the
following:</para>

<screen><userinput>cat &gt; /etc/ld.so.conf &lt;&lt; "EOF"</userinput>
# Begin /etc/ld.so.conf

/usr/local/lib
/opt/lib

# End /etc/ld.so.conf
<userinput>EOF</userinput></screen>

</sect2>


</sect1>
