<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 xmlns:xi="http://www.w3.org/2003/XInclude" id="ch-system-vim" xreflabel="Vim">
<title>Installing Vim-&vim-version;</title>
<?dbhtml filename="vim.html"?>

<para>The Vim package contains a powerful text editor.</para>

<screen>&buildtime; 0.4 SBU
&diskspace; 34 MB</screen>

<para>Vim installation depends on: Bash, Binutils, Coreutils, Diffutils,
GCC, Glibc, Grep, Make, Ncurses, Sed.</para>



<sect2>
<title>Alternatives to Vim</title>
<para>If you prefer another editor -- like Emacs, Joe, or Nano -- to Vim,
have a look at <ulink url="&blfs-root;view/stable/postlfs/editors.html"/> for
suggested installation instructions.</para>
</sect2>


<sect2>
<title>Installation of Vim</title>

<para>First change the default locations of the <filename>vimrc</filename> and
<filename>gvimrc</filename> configuration files to <filename class="directory">/etc</filename>.</para>

<screen><userinput>echo '#define SYS_VIMRC_FILE "/etc/vimrc"' &gt;&gt; src/feature.h
echo '#define SYS_GVIMRC_FILE "/etc/gvimrc"' &gt;&gt; src/feature.h</userinput></screen>

<para>Now prepare Vim for compilation:</para>

<screen><userinput>./configure --prefix=/usr</userinput></screen>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>To test the results, you can issue:
<userinput>make check</userinput>. However, this test suite outputs a lot of
seemingly garbage characters to the screen, and this can wreak havoc with the
settings of the current terminal. Therefore the running of the test suite here
is strictly optional.</para>

<para>Now install the package:</para>

<screen><userinput>make install</userinput></screen>

<para>Many users are used to using <command>vi</command>, instead of
<command>vim</command>. To let them execute <command>vim</command> when
they habitually enter <command>vi</command>, create a symlink:</para>

<screen><userinput>ln -s vim /usr/bin/vi</userinput></screen>

<para>If you are going to install the X Window system on your LFS system, you
may want to re-compile Vim after having installed X. Vim comes with a nice GUI
version of the editor that requires X and a few other libraries to be
installed. For more information read the Vim documentation.</para>

</sect2>


<sect2><title>Configuring Vim</title>

<para>By default, <command>vim</command> runs in vi-incompatible mode. Some
people might not like this, but we prefer to run <command>vim</command> in its
own mode (else we wouldn't have included it in this book, but the original
<command>vi</command>). We've included the setting of "nocompatible"
below to high-light the fact that the new behavior is being used. It
also reminds those who would change to "compatible" mode that it should
appear first because it changes other settings and overrides must come
after this setting. Create a default vim configuration file by running
the following:</para>

<screen><userinput>cat &gt; /etc/vimrc &lt;&lt; "EOF"</userinput>
" Begin /etc/vimrc

set nocompatible
set backspace=2
syntax on

" End /etc/vimrc
<userinput>EOF</userinput></screen>

<para>The <emphasis>set nocompatible</emphasis> makes
<command>vim</command> behave in a more useful way (the default) than the
vi-compatible manner. Remove the "no" if you want the old <command>vi</command>
behavior. The <emphasis>set backspace=2</emphasis> allows
backspacing over line breaks, autoindents and the start of insert. The
<emphasis>syntax on</emphasis> enables <command>vim</command>'s
semantic coloring.</para>

</sect2>


<sect2 id="contents-vim"><title>Contents of Vim</title>

<para><emphasis>Installed programs</emphasis>: efm_filter.pl, efm_perl.pl, ex
(link to vim), less.sh, mve.awk, pltags.pl, ref, rview (link to vim), rvim
(link to vim), shtags.pl, tcltags, vi (link to vim), view (link to vim), vim,
vim132, vim2html.pl, vimdiff (link to vim), vimm, vimspell.sh, vimtutor
and xxd</para>

</sect2>

<sect2><title>Short descriptions</title>

<para><command>efm_filter.pl</command> is a filter for creating an error
file that can be read by vim.</para>

<para><command>efm_perl.pl</command> reformats the error messages of the
Perl interpreter for use with the <quote>quickfix</quote> mode of vim.</para>

<para><command>ex</command> starts vim in ex mode.</para>

<para><command>less.sh</command> is a script that starts vim with less.vim.</para>

<para><command>mve.awk</command> processes vim errors.</para>

<para><command>pltags.pl</command> creates a tags file for perl code,
for use by vim.</para>

<para><command>ref</command> checks the spelling of arguments.</para>

<para><command>rview</command> is a restricted version of view: no shell
commands can be started and view can't be suspended.</para>

<para><command>rvim</command> is a restricted version of vim: no shell
commands can be started and vim can't be suspended.</para>

<para><command>shtags.pl</command> generates a tag file for perl scripts.</para>

<para><command>tcltags</command> generates a tag file for TCL code.</para>

<para><command>view</command> starts vim in read-only mode.</para>

<para><command>vim</command> is the editor.</para>

<para><command>vim132</command> starts vim with the terminal in
132-column mode.</para>

<para><command>vim2html.pl</command> converts vim documentation to
HTML.</para>

<para><command>vimdiff</command> edits two or three versions of a file with
vim and show differences.</para>

<para><command>vimm</command> enables the DEC locator input model on a
remote terminal.</para>

<para><command>vimspell.sh</command> is a script which spells a file and generates the syntax
statements necessary to highlight in vim.</para>

<para><command>vimtutor</command> teaches you the basic keys and commands
of vim.</para>

<para><command>xxd</command> makes a hex dump of the given file. It can
also do the reverse, so it can be used for binary patching.</para>

</sect2>



</sect1>
